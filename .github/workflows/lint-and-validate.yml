name: Lint and Validate Infrastructure Code

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.x

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Install Ansible
        run: pip install ansible-lint ansible

      - name: Ansible Lint
        run: ansible-lint ansible/playbook.yml

      - name: Docker Lint (hadolint)
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: docker/compose.yml

      - name: Fail if Terraform fmt or validate failed
        if: steps.fmt.outcome == 'failure' || steps.validate.outcome == 'failure'
        run: |
          echo "Terraform formatting or validation failed!"
          exit 1

  build-and-test:
    runs-on: ubuntu-latest
    needs: lint-and-validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker images
        run: docker-compose -f docker/compose.yml build

      - name: Run Docker tests (if any)
        run: echo "No specific Docker tests defined yet." # Placeholder for future Docker tests

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' # Only deploy on pushes to main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.x

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file="terraform/cluster.tfvars.example"

      - name: Run Ansible Playbook
        run: make init
